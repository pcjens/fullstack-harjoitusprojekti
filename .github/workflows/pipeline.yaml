name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  check_backend:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Lint backend
        working-directory: ./backend
        run: cargo fmt
      - name: Build backend
        working-directory: ./backend
        run: cargo build
  check_frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node toolchain
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install
      - name: Lint frontend
        working-directory: ./frontend
        run: npm run lint
      - name: Build frontend
        working-directory: ./frontend
        run: npm run build
  deploy_backend:
    if: ${{ github.event_name == 'push' && !contains(join(toJson(github.event.commits.*.message)), '#skip') }}
    needs: [check_backend]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Prepare deployment
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploy backend
        working-directory: ./backend
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  deploy_frontend:
    if: ${{ github.event_name == 'push' && !contains(join(toJson(github.event.commits.*.message)), '#skip') }}
    needs: [check_frontend]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Prepare deployment
        uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploy frontend
        working-directory: ./frontend
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
